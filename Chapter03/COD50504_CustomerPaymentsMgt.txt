OBJECT Codeunit 50504 Customer Payments Mgt.
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=PACKT QSG;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {

    PROCEDURE CreateSalesInvoices@1(VAR CustomerPayment@1000 : Record 50502);
    VAR
      SalesHeader@1001 : Record 36;
      InvoiceLineNo@1002 : Integer;
    BEGIN
      CustomerPayment.SETCURRENTKEY("Customer No.","Payment Date","Invoice Created");
      CustomerPayment.SETRANGE("Invoice Created",FALSE);
      IF CustomerPayment.FINDSET THEN
        REPEAT
          IF (SalesHeader."Sell-to Customer No." <> CustomerPayment."Customer No.") OR
             (SalesHeader."Document Date" <> CustomerPayment."Payment Date") THEN
          BEGIN
            CreateInvoiceHeader(SalesHeader,CustomerPayment);
            InvoiceLineNo := 10000;
          END;
          CreateInvoiceLine(SalesHeader,CustomerPayment,InvoiceLineNo);
        UNTIL CustomerPayment.NEXT = 0;
    END;

    LOCAL PROCEDURE CreateInvoiceHeader@2(VAR SalesHeader@1001 : Record 36;CustomerPayment@1000 : Record 50502);
    BEGIN
      SalesHeader.VALIDATE("Document Type",SalesHeader."Document Type"::Invoice);
      SalesHeader.VALIDATE("Sell-to Customer No.",CustomerPayment."Customer No.");
      SalesHeader.VALIDATE("Document Date",CustomerPayment."Payment Date");
      SalesHeader.INSERT(TRUE);
    END;

    LOCAL PROCEDURE CreateInvoiceLine@3(SalesHeader@1001 : Record 36;CustomerPayment@1000 : Record 50502;VAR LineNo@1003 : Integer);
    VAR
      SalesLine@1002 : Record 37;
      LeaseContractLine@1004 : Record 50501;
    BEGIN
      SalesLine.VALIDATE("Document Type",SalesHeader."Document Type");
      SalesLine.VALIDATE("Document No.",SalesHeader."No.");
      SalesLine.VALIDATE("Line No.",LineNo);

      LeaseContractLine.GET(CustomerPayment."Contract No.",CustomerPayment."Contract Line No.");
      SalesLine.VALIDATE(Type,SalesLine.Type::Item);
      SalesLine.VALIDATE("No.",LeaseContractLine."Item No.");
      SalesLine.VALIDATE(Quantity,1);
      SalesLine.VALIDATE("Line Amount",CustomerPayment.Amount);
      SalesLine.INSERT(TRUE);

      LineNo += 10000;
    END;

    PROCEDURE CalculateAmountPaidAtDate@4(VAR LeaseContractHeader@1000 : Record 50500;AsOfDate@1002 : Date) : Decimal;
    VAR
      LeaseContractLine@1003 : Record 50501;
      CustomerPayment@1001 : Record 50502;
      AmountPaid@1004 : Decimal;
    BEGIN
      CustomerPayment.SETRANGE("Contract No.",LeaseContractHeader."No.");
      CustomerPayment.SETFILTER("Payment Date",'<=%1',AsOfDate);
      LeaseContractLine.COPYFILTER("Item No.",LeaseContractHeader."Item No. Filter");
      IF LeaseContractLine.FINDSET THEN
        REPEAT
          CustomerPayment.SETRANGE("Contract Line No.",LeaseContractLine."Line No.");
          CustomerPayment.CALCSUMS(Amount);
          AmountPaid += CustomerPayment.Amount;
        UNTIL LeaseContractLine.NEXT = 0;

      EXIT(AmountPaid);
    END;

    LOCAL PROCEDURE CustomerPaymentsExist@5(ContractNo@1001 : Code[20];ContractLineNo@1002 : Integer) : Boolean;
    VAR
      CustomerPayment@1000 : Record 50502;
    BEGIN
      CustomerPayment.SETRANGE("Contract No.",ContractNo);
      CustomerPayment.SETRANGE("Contract Line No.",ContractLineNo);
      EXIT(NOT CustomerPayment.ISEMPTY);
    END;

    PROCEDURE ContractPaymentsExist@7(VAR LeaseContractHeader@1000 : Record 50500) : Boolean;
    VAR
      LeaseContractLine@1001 : Record 50501;
    BEGIN
      LeaseContractLine.SETRANGE("Contract No.",LeaseContractHeader."No.");
      LeaseContractHeader.COPYFILTER("Item No. Filter",LeaseContractLine."Item No.");
      IF LeaseContractLine.FINDSET THEN
        REPEAT
          IF CustomerPaymentsExist(LeaseContractLine."Contract No.",LeaseContractLine."Line No.") THEN
            EXIT(TRUE);
        UNTIL LeaseContractLine.NEXT = 0;

      EXIT(FALSE);
    END;

    PROCEDURE ContractLinePaymentsExist@8(VAR LeaseContractLine@1000 : Record 50501) : Boolean;
    BEGIN
      EXIT(CustomerPaymentsExist(LeaseContractLine."Contract No.",LeaseContractLine."Line No."));
    END;

    BEGIN
    END.
  }
}

