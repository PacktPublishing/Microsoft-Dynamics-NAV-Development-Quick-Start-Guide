OBJECT Codeunit 50504 Customer Payments Mgt.
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=PACKT QSG;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      MissingPayTermsErr@1000 : TextConst 'ENU=To create an invoice, fill the payment terms code.';

    PROCEDURE CalcNextPaymentDate@6(ContractNo@1000 : Code[20];AtDate@1005 : Date) : Date;
    VAR
      LeaseContractHeader@1001 : Record 50500;
      ContractPaymentTerms@1002 : Record 50503;
      PaymentDate@1004 : Date;
      I@1003 : Integer;
    BEGIN
      LeaseContractHeader.GET(ContractNo);
      IF AtDate > LeaseContractHeader."Ending Date" THEN
        EXIT(0D);

      IF NOT ContractPaymentTerms.GET(LeaseContractHeader."Payment Terms Code") THEN
        EXIT(0D);

      PaymentDate := LeaseContractHeader."Starting Date";
      WHILE (PaymentDate <= LeaseContractHeader."Ending Date") AND (PaymentDate <= AtDate) DO
        PaymentDate := CALCDATE(ContractPaymentTerms."Payment Date Formula",PaymentDate);

      IF PaymentDate > LeaseContractHeader."Ending Date" THEN
        PaymentDate := LeaseContractHeader."Ending Date";

      EXIT(PaymentDate);
    END;

    LOCAL PROCEDURE CreateInvoiceHeader@2(VAR SalesHeader@1001 : Record 36;CustomerPayment@1000 : Record 50502);
    BEGIN
      SalesHeader.VALIDATE("Document Type",SalesHeader."Document Type"::Invoice);
      SalesHeader.VALIDATE("Sell-to Customer No.",CustomerPayment."Customer No.");
      SalesHeader.VALIDATE("Document Date",CustomerPayment."Payment Date");
      SalesHeader.INSERT(TRUE);
    END;

    LOCAL PROCEDURE CreateInvoiceLine@3(SalesHeader@1001 : Record 36;CustomerPayment@1000 : Record 50502;VAR LineNo@1003 : Integer);
    VAR
      SalesLine@1002 : Record 37;
      LeaseContractLine@1004 : Record 50501;
    BEGIN
      SalesLine.VALIDATE("Document Type",SalesHeader."Document Type");
      SalesLine.VALIDATE("Document No.",SalesHeader."No.");
      SalesLine.VALIDATE("Line No.",LineNo);

      LeaseContractLine.GET(CustomerPayment."Contract No.",CustomerPayment."Contract Line No.");
      SalesLine.VALIDATE(Type,SalesLine.Type::Item);
      SalesLine.VALIDATE("No.",LeaseContractLine."Item No.");
      SalesLine.VALIDATE(Quantity,1);
      SalesLine.VALIDATE("Line Amount",CustomerPayment.Amount);
      SalesLine.INSERT(TRUE);

      LineNo += 10000;
    END;

    PROCEDURE CreateSalesInvoice@13(VAR LeaseContractHeader@1000 : Record 50500);
    VAR
      SalesHeader@1001 : Record 36;
    BEGIN
      CreateSalesInvoiceHeader(SalesHeader,LeaseContractHeader);
      CreateSalesInvoiceLine(SalesHeader,LeaseContractHeader."No.");
    END;

    PROCEDURE CreateSalesInvoiceHeader@11(VAR SalesHeader@1002 : Record 36;VAR LeaseContractHeader@1000 : Record 50500);
    VAR
      ContractPaymentTerms@1001 : Record 50503;
    BEGIN
      IF NOT ContractPaymentTerms.GET(LeaseContractHeader."Payment Terms Code") THEN
        ERROR(MissingPayTermsErr);

      SalesHeader.VALIDATE("Document Type",SalesHeader."Document Type"::Invoice);
      SalesHeader.VALIDATE("Sell-to Customer No.",LeaseContractHeader."Customer No.");

      IF LeaseContractHeader."Last Invoice Date" = 0D THEN
        SalesHeader.VALIDATE("Document Date",LeaseContractHeader."Starting Date")
      ELSE
        SalesHeader.VALIDATE(
          "Document Date",CALCDATE(ContractPaymentTerms."Payment Date Formula",LeaseContractHeader."Last Invoice Date"));
      SalesHeader.VALIDATE("Posting Date",SalesHeader."Document Date");
      SalesHeader.INSERT(TRUE);

      LeaseContractHeader.VALIDATE("Last Invoice Date",SalesHeader."Document Date");
      LeaseContractHeader.MODIFY(TRUE);
    END;

    PROCEDURE CreateSalesInvoiceLine@10(SalesHeader@1001 : Record 36;ContractNo@1000 : Code[20]);
    VAR
      SalesLine@1002 : Record 37;
      LeaseContractLine@1004 : Record 50501;
      LineNo@1003 : Integer;
    BEGIN
      SalesLine.VALIDATE("Document Type",SalesHeader."Document Type");
      SalesLine.VALIDATE("Document No.",SalesHeader."No.");
      SalesLine.VALIDATE("Line No.",LineNo);

      LeaseContractLine.SETRANGE("Contract No.",ContractNo);
      IF LeaseContractLine.FINDSET THEN
        REPEAT
          LineNo += 10000;
          SalesLine.VALIDATE(Type,SalesLine.Type::Item);
          SalesLine.VALIDATE("No.",LeaseContractLine."Item No.");
          SalesLine.VALIDATE(Quantity,1);
          SalesLine.VALIDATE("Line Amount",LeaseContractLine.Amount);
          SalesLine.INSERT(TRUE);
        UNTIL LeaseContractLine.NEXT = 0;
    END;

    PROCEDURE CalculateAmountPaidAtDate@4(VAR LeaseContractHeader@1000 : Record 50500;AsOfDate@1002 : Date) : Decimal;
    VAR
      LeaseContractLine@1003 : Record 50501;
      CustomerPayment@1001 : Record 50502;
      AmountPaid@1004 : Decimal;
    BEGIN
      CustomerPayment.SETRANGE("Contract No.",LeaseContractHeader."No.");
      CustomerPayment.SETFILTER("Payment Date",'<=%1',AsOfDate);
      LeaseContractLine.COPYFILTER("Item No.",LeaseContractHeader."Item No. Filter");
      IF LeaseContractLine.FINDSET THEN
        REPEAT
          CustomerPayment.SETRANGE("Contract Line No.",LeaseContractLine."Line No.");
          CustomerPayment.CALCSUMS(Amount);
          AmountPaid += CustomerPayment.Amount;
        UNTIL LeaseContractLine.NEXT = 0;

      EXIT(AmountPaid);
    END;

    LOCAL PROCEDURE CustomerPaymentsExist@5(ContractNo@1001 : Code[20];ContractLineNo@1002 : Integer) : Boolean;
    VAR
      CustomerPayment@1000 : Record 50502;
    BEGIN
      CustomerPayment.SETRANGE("Contract No.",ContractNo);
      CustomerPayment.SETRANGE("Contract Line No.",ContractLineNo);
      EXIT(NOT CustomerPayment.ISEMPTY);
    END;

    PROCEDURE ContractPaymentsExist@7(VAR LeaseContractHeader@1000 : Record 50500) : Boolean;
    VAR
      LeaseContractLine@1001 : Record 50501;
    BEGIN
      LeaseContractLine.SETRANGE("Contract No.",LeaseContractHeader."No.");
      LeaseContractHeader.COPYFILTER("Item No. Filter",LeaseContractLine."Item No.");
      IF LeaseContractLine.FINDSET THEN
        REPEAT
          IF CustomerPaymentsExist(LeaseContractLine."Contract No.",LeaseContractLine."Line No.") THEN
            EXIT(TRUE);
        UNTIL LeaseContractLine.NEXT = 0;

      EXIT(FALSE);
    END;

    PROCEDURE ContractLinePaymentsExist@8(VAR LeaseContractLine@1000 : Record 50501) : Boolean;
    BEGIN
      EXIT(CustomerPaymentsExist(LeaseContractLine."Contract No.",LeaseContractLine."Line No."));
    END;

    PROCEDURE FindLastCustomerPaymentDate@9(ContractNo@1001 : Code[20]) : Date;
    VAR
      CustomerPayment@1000 : Record 50502;
    BEGIN
      CustomerPayment.SETCURRENTKEY("Contract No.","Payment Date");
      CustomerPayment.SETRANGE("Contract No.",ContractNo);
      IF CustomerPayment.FINDLAST THEN
        EXIT(CustomerPayment."Payment Date");

      EXIT(0D);
    END;

    BEGIN
    END.
  }
}

